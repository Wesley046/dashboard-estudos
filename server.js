const express = require("express");
const cors = require("cors");
const bodyParser = require("body-parser");
const path = require("path");
require("dotenv").config(); // Carrega variÃ¡veis de ambiente

// âœ… Inicializa o Express
const app = express();

// âœ… Middleware
app.use(cors());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// âœ… Servir arquivos estÃ¡ticos corretamente
app.use(express.static(path.join(__dirname, "public")));
console.log("ðŸ“‚ Servindo arquivos estÃ¡ticos de:", path.join(__dirname, "public"));

// âœ… ImportaÃ§Ã£o das Rotas
const authRoutes = require("./src/routes/authRoutes");
const dashboardRoutes = require("./src/routes/dashboardRoutes");
const disciplinasRoutes = require("./src/routes/disciplinasRoutes");
const estudosRoutes = require("./src/routes/estudosRoutes");
const usuariosRoutes = require("./src/routes/usuariosRoutes");
app.use("/api/usuarios", usuariosRoutes);


// âœ… Registrar Rotas
app.use("/api/auth", authRoutes);
app.use("/api/dashboard", dashboardRoutes);
app.use("/api/disciplinas", disciplinasRoutes); // ðŸ”¥ Aqui estÃ¡ correto!
app.use("/api/estudos", estudosRoutes);

// âœ… Rotas para pÃ¡ginas estÃ¡ticas
app.get("/", (req, res) => {
    res.sendFile(path.join(__dirname, "public", "login.html"));
});

app.get("/dashboard", (req, res) => {
    res.sendFile(path.join(__dirname, "public", "dashboard.html"));
});

// âœ… Tratamento de erro 404 para APIs
app.use("/api", (req, res) => {
    res.status(404).json({ error: "Rota nÃ£o encontrada" });
});

// âœ… Tratamento de erro 404 para pÃ¡ginas comuns
app.use((req, res) => {
    res.status(404).send("PÃ¡gina nÃ£o encontrada");
});

// âœ… Inicia o servidor corretamente
const PORT = process.env.PORT || 1000;
const HOST = "0.0.0.0";

app.listen(PORT, HOST, () => {
    console.log(`ðŸš€ Servidor rodando em http://${HOST}:${PORT}`);
});
